{"version":3,"sources":["store/user.js","store/app.js","store/store.js","components/CategoryIcon.js","components/CategoryOptions.js","components/CategoriesTabs.js","assets/australia.png","components/NavBar.js","components/ScoreBar.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","name","loggedIn","quiz_data","require","darkMode","window","matchMedia","matches","data","selectedTabIndex","scoreBoard","points","selectedOptions","getTotalPoints","state","app","getData","getDarkModePreference","getSelectedOptions","getSelectedTabIndex","OPTION_CHANGED","DARKMODE_CHANGED","SELECTEDCATEGORYTAB_CHANGED","store","createStore","combineReducers","user","action","type","newSelectedOptions","Object","assign","payload","category","option","newSelectedTabIndex","length","newTotal","keys","reduce","accumulator","value","renderIcon","param","toLowerCase","CategoryIcon","TabPanel","props","children","index","other","Typography","component","role","hidden","id","Box","p","Option","opt","cat","dispatch","useDispatch","handleOptionChange","selectOption","useSelector","checked","undefined","description","Grid","container","direction","justifyContent","alignItems","onClick","sx","paddingBottom","cursor","item","Radio","size","xs","variant","fontWeight","CategoryTabContent","color","padding","headLineQuestion","options","map","uuid","CategoriesTabs","Tabs","onChange","event","newValue","scrollButtons","allowScrollButtonsMobile","Tab","icon","label","a11yProps","ButtonAppBar","preferDarkMode","handleDarkModeChange","isDarkMode","changeDarkMode","AppBar","position","Toolbar","spacing","Avatar","alt","src","AuFlag","Switch","useStyles","makeStyles","theme","root","margin","width","ScoreBar","classes","myPoints","Paper","className","elevation","bgcolor","align","App","createTheme","palette","mode","responsiveFontSizes","ThemeProvider","StrictMode","CssBaseline","Container","maxWidth","m","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c67cb013.chunk.js","sourcesContent":["const initialState = {\n    name: 'Odair Ferreira',\n    loggedIn: true\n}\n\n\nexport function userReducer(state = initialState, action){\n    return state;\n}","let quiz_data = require('../data/appData.json');\nconst isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\nconst initialState = {\n    darkMode: isDarkMode,\n    data: quiz_data,\n    selectedTabIndex: 0,\n    scoreBoard: {\n        points: 0,\n        selectedOptions: {}\n    }\n};\n\nexport function appReducer(state = initialState, action) {\n    switch (action.type) {\n        case OPTION_CHANGED:\n\n            let newSelectedOptions = Object.assign({}, state.scoreBoard.selectedOptions);\n            newSelectedOptions[action.payload.category] = {\n                option: action.payload.option,\n                points: action.payload.points\n            };\n\n            let newSelectedTabIndex = (state.selectedTabIndex + 1) <= (quiz_data.length - 1) ? (state.selectedTabIndex + 1) : (quiz_data.length - 1);\n\n            let newTotal = Object.keys(newSelectedOptions).reduce((accumulator, value) => {\n                return accumulator += newSelectedOptions[value].points;\n            }, 0);\n\n            return {\n                ...state,\n                selectedTabIndex: newSelectedTabIndex,\n                scoreBoard: { ...state.scoreBoard, points: newTotal, selectedOptions: newSelectedOptions }\n            }\n        case DARKMODE_CHANGED:\n            return { ...state, darkMode: action.payload };\n        case SELECTEDCATEGORYTAB_CHANGED:\n            return { ...state, selectedTabIndex: action.payload };\n        default:\n            return state;\n    }\n}\n\n// selectors\nexport const getTotalPoints = (state) => state.app.scoreBoard.points;\nexport const getData = (state) => state.app.data;\nexport const getDarkModePreference = (state) => state.app.darkMode;\nexport const getSelectedOptions = (state) => state.app.scoreBoard.selectedOptions;\nexport const getSelectedTabIndex = (state) => state.app.selectedTabIndex;\n\n// action types\nexport const OPTION_CHANGED = \"app/optionChanged\";\nexport const DARKMODE_CHANGED = \"app/darkModeChanged\";\nexport const SELECTEDCATEGORYTAB_CHANGED = \"app/selectedCategoryTabChanged\";\n\n// action creators\nexport const selectOption = (option) => ({\n    type: OPTION_CHANGED,\n    payload: option\n});\n\nexport const changeDarkMode = (isDarkMode) => ({\n    type: DARKMODE_CHANGED,\n    payload: isDarkMode\n});\n\nexport const changeSelectedCategoryTab = (newSelectedTabIndex) => ({\n    type: SELECTEDCATEGORYTAB_CHANGED,\n    payload: newSelectedTabIndex\n});\n","import { createStore, combineReducers } from 'redux';\nimport {userReducer} from './user';\nimport {appReducer} from './app';\n\nexport const store = createStore(combineReducers({\n    user: userReducer,\n    app: appReducer\n}));\n","import React from 'react';\nimport HelpIcon from '@material-ui/icons/Help';\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined';\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport LanguageOutlinedIcon from '@material-ui/icons/LanguageOutlined';\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\nimport WorkOutlinedIcon from '@material-ui/icons/WorkOutlined';\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\nimport LocalLibraryOutlinedIcon from '@material-ui/icons/LocalLibraryOutlined';\nimport CollectionsBookmarkOutlinedIcon from '@material-ui/icons/CollectionsBookmarkOutlined';\nimport GTranslateOutlinedIcon from '@material-ui/icons/GTranslateOutlined';\nimport GroupOutlinedIcon from '@material-ui/icons/GroupOutlined';\nimport PlusOneOutlinedIcon from '@material-ui/icons/PlusOneOutlined';\n\nconst renderIcon = (param) => {\n  switch (param.toLowerCase()) {\n    case 'visa subclass':\n      return <AssignmentOutlinedIcon />;\n    case 'age':\n      return <FaceOutlinedIcon />;\n    case 'english language':\n      return <LanguageOutlinedIcon />;\n    case 'overseas work experience':\n      return <WorkOutlineOutlinedIcon />;\n    case 'australian work experience':\n      return <WorkOutlinedIcon />;\n    case 'educational qualifications':\n      return <SchoolOutlinedIcon />;\n    case 'australian educational qualification':\n      return <LocalLibraryOutlinedIcon />;\n    case 'specialist educational qualification':\n      return <CollectionsBookmarkOutlinedIcon />;\n    case 'accredited community language':\n      return <GTranslateOutlinedIcon />;\n    case 'partner qualifications':\n      return <GroupOutlinedIcon />;\n    case 'professional year in australia':\n      return <PlusOneOutlinedIcon />;\n    default:\n      return <HelpIcon />;\n  }\n}\n\n\nexport default function CategoryIcon({category}) {\n  return (\n    <div>\n      {renderIcon(category)}\n    </div>\n  )\n}","import { Box, Grid, Radio, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport uuid from 'react-uuid';\nimport { getSelectedOptions, selectOption } from '../store/app';\n\n\nconst TabPanel = (props) => {\n    const { children, value, index, ...other } = props;\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-force-tabpanel-${index}`}\n            aria-labelledby={`scrollable-force-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={0}>{children}</Box>}\n        </Typography>\n    );\n}\n\nconst Option = ({ opt, cat }) => {\n    const dispatch = useDispatch();\n    const handleOptionChange = (option) => {\n        dispatch(selectOption(option));\n    };\n\n    const selectedOptions = useSelector(getSelectedOptions);\n\n    const checked = selectedOptions !== undefined\n        && selectedOptions[cat] !== undefined\n        && selectedOptions[cat].option === opt.description;\n\n    return (\n        <Grid container direction='row' justifyContent=\"flex-start\" alignItems=\"center\"\n            onClick={() => handleOptionChange({ category: cat, option: opt.description, points: opt.points })}\n            sx={{ paddingBottom: '20px', cursor: 'pointer' }}>\n            <Grid item> \n                <Radio checked={checked} size=\"small\" />\n            </Grid>\n            <Grid item xs={10}> \n                <Typography variant='body1' component='span'>{opt.description} </Typography>\n                <Typography variant='body1' component='span' fontWeight='fontWeightLight'>({opt.points} points)</Typography>\n            </Grid>\n        </Grid>\n    )\n}\n\n\n\nexport default function CategoryTabContent({ category, value, index }) {\n\n    return (\n        <TabPanel key={uuid()} value={value} index={index} p={2}>\n            <Typography variant='subtitle1' \n                fontWeight='fontWeightMedium'\n                color=\"text.secondary\"\n                sx={{ padding: '20px 0' }}>\n                {category.headLineQuestion}\n            </Typography>\n            <Typography component='div'>\n                {category.options.map((opt) => <Option key={uuid()} cat={category.category} opt={opt} />)}\n            </Typography>\n        </TabPanel>)\n}","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeSelectedCategoryTab, getData, getSelectedTabIndex } from '../store/app';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport CategoryIcon from './CategoryIcon';\nimport CategoryTabContent from './CategoryOptions';\nimport { Box } from '@material-ui/core';\n\nfunction a11yProps(index) {\n  return {\n      id: `scrollable-force-tab-${index}`,\n      'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\n\nexport default function CategoriesTabs() {\n  \n  const data = useSelector(getData);\n\n  const dispatch = useDispatch();\n  const selectedTabIndex = useSelector(getSelectedTabIndex);\n  const handleChange = (event, newValue) => {\n    dispatch(changeSelectedCategoryTab(newValue));\n  };\n  \n  return (\n    <Box>\n      <Tabs\n        value={selectedTabIndex}\n        onChange={handleChange}\n        aria-label=\"categories navigation tabs\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        allowScrollButtonsMobile={true}\n      >\n        {data.map((item, index) => {\n          return <Tab icon={<CategoryIcon category={item.category} />}\n            label={item.category}\n            key={index} \n            {...a11yProps(index)} />\n        })}\n      </Tabs>\n      {\n        data.map((item, index) => {\n          return <CategoryTabContent key={index} value={selectedTabIndex} index={index} category={item}  />\n        })\n      }\n    </Box>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/australia.5b0eda20.png\";","import * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Avatar, Grid, Switch, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeDarkMode, getDarkModePreference } from '../store/app';\nimport AuFlag from '../assets/australia.png';\n\nexport default function ButtonAppBar() {\n\n  const dispatch = useDispatch();\n  const preferDarkMode = useSelector(getDarkModePreference);\n  const handleDarkModeChange = (isDarkMode) => dispatch(changeDarkMode(isDarkMode));\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Grid container\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\" >\n          <Grid item>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item>\n                <Avatar alt=\"Australia\" src={AuFlag} variant=\"square\" />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\" component='span'> AU visa calculator</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\" component='span'>Dark Mode</Typography>\n            <Switch checked={preferDarkMode} onChange={() => handleDarkModeChange(!preferDarkMode)} />\n            <Typography variant=\"caption\" component='span'>{preferDarkMode ? 'on' : 'off'}</Typography>\n\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { getTotalPoints } from '../store/app';\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '20px auto',\n    width: '80%',\n  },\n}));\n\n\nexport default function ScoreBar() {\n\n  const classes = useStyles();\n  const myPoints = useSelector(getTotalPoints);\n\n  return (\n    <Paper className={classes.root} \n      elevation={24} \n      sx={{ bgcolor: 'success.main', p:2, color: 'primary.contrastText' }}\n      >\n      \n      <Typography variant='caption' fontWeight='fontWeightLight'>Points required for immigration to Australia</Typography>\n\n      <Grid container direction=\"row\" justifyContent='space-between' align='center' >\n        <Grid item>\n          <Typography variant='subtitle2' component='span' fontWeight='fontWeightLight'>Minimum: </Typography> \n          <Typography variant='subtitle1' component='span' fontWeight='fontWeightMedium' >65</Typography>\n        </Grid>\n\n        <Grid item>\n          <Typography variant='subtitle2' component='span' fontWeight='fontWeightLight'>Your points: </Typography> \n          <Typography variant='subtitle1' component='span' fontWeight='fontWeightMedium'>{myPoints}</Typography>\n        </Grid>\n\n      </Grid>\n\n\n      {/* <span>Your points: {myPoints} </span> */}\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { createTheme, CssBaseline, ThemeProvider, responsiveFontSizes, Container, Alert, Box, Typography } from '@material-ui/core';\nimport CategoriesTabs from './components/CategoriesTabs';\nimport ButtonAppBar from './components/NavBar';\nimport ScoreBar from './components/ScoreBar';\nimport { getDarkModePreference } from './store/app';\nimport { useSelector } from 'react-redux';\n\nexport default function App() {\n\n  // dark theme handling\n  const preferDarkMode = useSelector(getDarkModePreference);\n  let theme = createTheme({\n    palette: {\n      mode: preferDarkMode ? 'dark' : 'light',\n    },\n  });\n  theme = responsiveFontSizes(theme);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <React.StrictMode>\n        <CssBaseline />\n        <ButtonAppBar />\n        <Container sx={{ padding: 0 }} maxWidth=\"md\">\n          <ScoreBar />\n          <Box m={2} >\n            <Alert severity=\"info\" m='2' >\n              <Typography variant='caption'>Reply to the below questions and get your score for Australian skill visa program.</Typography>\n            </Alert>\n          </Box>\n\n          <CategoriesTabs />\n        </Container>\n      </React.StrictMode>\n    </ThemeProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}